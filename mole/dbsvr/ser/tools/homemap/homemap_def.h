/*
 * =====================================================================================
 * 
 *       Filename:  homemap_def.h
 * 
 *    Description:  
 * 
 *        Version:  1.0
 *        Created:  2008年02月19日 10时24分07秒 CST
 *       Revision:  none
 *       Compiler:  gcc
 * 
 *         Author:  xcwen (xcwen), xcwenn@gmail.com
 *        Company:  TAOMEE
 *
 *      ------------------------------------------------------------
 *      view configure:
 *          VIM:  set tabstop=4  
 * 
 * =====================================================================================
 */

#ifndef  HOMEMAP_DEF_INC
#define  HOMEMAP_DEF_INC
#include <stdint.h> 
#define  Bin0000 0
#define  Bin0001 1
#define  Bin0010 2
#define  Bin0011 3
#define  Bin0100 4
#define  Bin0101 5
#define  Bin0110 6
#define  Bin0111 7
#define  Bin1000 8
#define  Bin1001 9
#define  Bin1010 A
#define  Bin1011 B
#define  Bin1100 C
#define  Bin1101 D
#define  Bin1110 E
#define  Bin1111 F
#define  HEX_MK_T(x,y) 0x##x##y  
#define  HEX_MK(x,y) HEX_MK_T(x,y)  
#define  BIN_MK_4(x1,x2,x3,x4)  Bin##x1##x2##x3##x4  
#define  BIN_2(x,y)  HEX_MK(Bin##x,Bin##y)
#define  BIN_8(x1,x2,x3,x4,y1,y2,y3,y4)  \
	HEX_MK( BIN_MK_4(x1,x2,x3,x4), BIN_MK_4(y1,y2,y3,y4)  )

#define  BIN_24(a1,a2,a3,a4,a5,a6,a7,a8,b1,b2,b3,b4,b5,b6,b7,b8, c1,c2,c3,c4,c5,c6,c7,c8)  \
	BIN_8(a1,a2,a3,a4,a5,a6,a7,a8),BIN_8(b1,b2,b3,b4,b5,b6,b7,b8),BIN_8(c1,c2,c3,c4,c5,c6,c7,c8)
#define MAP_COUNT  (sizeof(init_map_data)/sizeof (init_map_data[0])) 

uint8_t init_map_data[][17]={ 
//layer 0 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,1,1,1,1),
	BIN_8(0,1,0,0,0,0,0,1),
	BIN_8(0,1,0,1,1,1,0,1),
	BIN_8(0,1,0,1,1,1,1,1),
	BIN_8(0,1,0,1,1,1,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 1 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,1,1,1,1,1,0),
	BIN_8(1,1,1,1,1,0,1,0),
	BIN_8(0,0,1,1,1,1,1,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 2 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,1,0,1,1),
	BIN_8(1,1,0,0,1,1,1,1),
	BIN_8(0,0,0,0,0,0,1,1),
	BIN_8(0,0,0,0,0,0,1,1),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 3 data 
{ 
	BIN_8(0,0,0,1,1,1,1,0),
	BIN_8(0,0,0,1,1,1,1,0),
	BIN_8(0,0,0,0,1,0,1,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 4 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,1,1,0,0),
	BIN_8(0,0,0,0,1,1,0,0),
	BIN_8(1,1,1,1,1,1,0,0),
	BIN_8(0,0,0,1,0,0,0,0),
	BIN_8(0,0,0,1,1,1,1,0),
	BIN_8(0,0,0,0,1,1,1,0),
	BIN_8(0,0,0,0,1,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 5 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,1,1,1,0,0),
	BIN_8(0,1,0,1,1,1,0,0),
	BIN_8(1,1,0,1,1,1,0,0),
	BIN_8(0,1,0,1,1,1,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 6 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,0,1,1,1,0,1),
	BIN_8(1,1,1,1,1,1,1,1),
	BIN_8(0,0,0,1,1,1,0,1),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 7 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(1,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 8 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,0,1,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(0,1,1,0,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 9 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(1,1,0,1,0,0,0,0),
	BIN_8(0,0,1,1,1,0,0,0),
	BIN_8(0,0,1,1,1,1,0,0),
	BIN_8(0,0,1,1,1,1,0,0),
	BIN_8(0,0,0,0,1,1,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 10 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(1,1,1,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 11 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,1,1,1,1),
	BIN_8(0,1,0,0,0,0,0,1),
	BIN_8(1,1,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 12 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,1,1,0,0,0,0,0),
	BIN_8(0,0,1,1,0,0,0,0),
	BIN_8(0,0,0,1,1,0,0,0),
	BIN_8(0,0,0,0,1,1,1,0),
	BIN_8(0,0,0,0,1,1,1,0),
	BIN_8(0,0,0,0,1,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 13 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(0,0,1,1,0,0,0,0),
	BIN_8(0,0,0,1,1,0,0,0),
	BIN_8(0,0,1,1,0,0,0,0),
	BIN_8(0,1,1,0,0,0,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 14 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,0,1,1),
	BIN_8(0,0,0,0,1,1,1,1),
	BIN_8(0,0,0,1,1,0,0,0),
	BIN_8(0,0,1,1,0,0,0,0),
	BIN_8(1,1,1,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 15 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,1,0,0,0,0),
	BIN_8(1,1,1,1,0,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 16 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,0,1,1,0,0),
	BIN_8(1,1,1,0,1,1,0,0),
	BIN_8(0,1,1,1,1,1,0,0),
	BIN_8(0,0,0,0,1,1,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 17 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,1,1,0,0,0,0,0),
	BIN_8(0,1,1,0,0,0,0,0),
	BIN_8(0,1,0,0,0,0,0,0),
	BIN_8(1,1,0,1,1,0,0,0),
	BIN_8(0,1,0,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,0,0,1,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 18 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,1,0,0,1,1,0),
	BIN_8(0,1,1,0,1,1,1,0),
	BIN_8(0,0,1,0,0,1,1,0),
	BIN_8(1,1,1,1,1,1,0,0),
	BIN_8(0,0,1,0,0,1,1,0),
	BIN_8(0,1,1,0,1,1,1,0),
	BIN_8(0,0,1,0,0,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 19 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(1,1,1,1,1,1,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,0,1,1),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 20 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,1,1,1),
	BIN_8(0,0,0,0,0,0,1,0),
	BIN_8(1,1,1,1,1,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 21 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,1,1,1,1,1,0),
	BIN_8(0,0,1,0,1,1,1,0),
	BIN_8(0,0,1,0,1,1,1,0),
	BIN_8(1,1,1,0,1,1,1,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 22 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,1,1,1,0,0,0),
	BIN_8(0,0,1,1,1,0,0,0),
	BIN_8(1,1,1,0,0,0,0,0),
	BIN_8(0,0,1,1,1,0,0,0),
	BIN_8(0,0,1,1,1,0,0,0),
	BIN_8(0,0,0,0,1,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
},
//layer 23 data 
{ 
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(1,1,0,0,0,0,0,0),
	BIN_8(0,1,0,1,1,0,0,0),
	BIN_8(0,1,1,1,1,0,0,0),
	BIN_8(0,0,0,1,1,1,0,0),
	BIN_8(0,0,0,1,1,1,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0),
	BIN_8(0,0,0,0,0,0,0,0)
}
};
#endif   /* ----- #ifndef HOMEMAP_DEF_INC  ----- */

