1. interface fork 一个子进程, 发现其中只有一个进程(暂不肯定一定会是parent还是child) 会作为 conn 来收包;
	fork 的动作在系统初始化之前或之后进行均可, 但必须在 libevent 的相关代码之前 (否则会导致部分的recvfrom失败, 并且丢数据), 这里的原因未知;
	不过可以肯定的是, 即使没有作为 conn 来收包的进程, 仍然可以用 bind-fd 给客户端回包(且客户端能无差别的收取父子进程回的包);

问题是: 对于UDP来说, 以 bind --> fork 的顺序执行后, 到底是那个进程会作为 conn 来负责接收发送到 bind-fd 的数据?
